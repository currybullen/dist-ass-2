syntax = "proto3";
option java_package = "se.umu.cs.c12mkn.grpc";
option java_multiple_files = true;

message Message {
    string id = 1;
    string sender = 2;
    string recipient = 3;
    string topic = 4;
    int64 timestamp = 5;
    string content = 6;
}

message PostMessageRequest {
    Message message = 1;
}

message PostMessageResponse {

}

message ListMessagesRequest {
    string topic = 1;
}

message ListMessagesResponse {
    repeated string ids = 1;
}

message ListMessagesWithTimestampsRequest {
    string topic = 1;
}

message MessageTimestampMapEntry {
    string id = 1;
    int64 timestamp = 2;
}

message ListMessagesWithTimestampsResponse {
    repeated MessageTimestampMapEntry messageTimestampMap = 1;
}

message RetrieveMessageRequest {
    string id = 1;
}

message RetrieveMessageResponse {
    Message message = 1;
}

message ListTopicsRequest {

}

message ListTopicsResponse {
    repeated string topics = 1;
}

message SubscribeRequest {
    string username = 1;
    string topic = 2;
}

message UnsubscribeResponse {
    bool successful = 1;
}

message SubscribeResponse {
    bool successful = 1;
}

message UnsubscribeRequest {
    string username = 1;
    string topic = 2;
}

message ListSubscribersRequest {
    string topic = 1;
}

message ListSubscribersResponse {
    repeated string subscribers = 1;
}

message ListNodesRequest {

}

message ListNodesResponse {
    repeated string nodes = 1;
}

service MessageService {
    rpc PostMessage (PostMessageRequest) returns (PostMessageResponse);

    rpc ListMessages (ListMessagesRequest) returns (ListMessagesResponse);

    rpc ListTimestamps(ListMessagesWithTimestampsRequest) returns (ListMessagesWithTimestampsResponse);

    rpc RetrieveMessage(RetrieveMessageRequest) returns (RetrieveMessageResponse);

    rpc ListTopics(ListTopicsRequest) returns (ListTopicsResponse);
}

service SubscribeService {
    rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);

    rpc Unsubscribe (UnsubscribeRequest) returns (UnsubscribeResponse);

    rpc ListSubscribers (ListSubscribersRequest) returns (ListSubscribersResponse);
}

service NodeService {
    rpc ListNodes (ListNodesRequest) returns (ListNodesResponse);
}
