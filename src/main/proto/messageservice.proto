syntax = "proto3";
option java_package = "se.umu.cs.c12mkn.grpc";
option java_multiple_files = true;

message Empty {

}

message RSARequest {
    bytes publicKey = 1;
}

message DHParameters {
    bytes modulus = 1;
    bytes base = 2;
    bytes publicKey = 3;
    string algorithm = 4;
}

message DHResponse {
    bytes publicKey = 1;
    string session = 2;
}

message SignedDHResponse {
    DHResponse dhResponse = 1;
    bytes sign = 2;
}

message Username {
    string value = 1;
}

message Challenge {
    string value = 1;
}

message AuthResponse {
    string username = 1;
    string challenge = 2;
    string answer = 3;
}

message Succeeded {
    bool value = 1;
}

message Message {
    string id = 1;
    string sender = 2;
    string recipient = 3;
    string topic = 4;
    int64 timestamp = 5;
    string content = 6;
    bytes attachments = 7;
}

message Topic {
    string value = 1;
}

message MessageList {
    repeated string ids = 1;
}

message MessageListWithTimestampsEntry {
    string id = 1;
    int64 timestamp = 2;
}

message MessageListWithTimestamps {
    repeated MessageListWithTimestampsEntry timestamps = 1;
}

message Id {
    string value = 1;
}

message TopicList {
    repeated string topics = 1;
}

message SubscriberInfo {
    string username = 1;
    string topic = 2;
}

message SubscriberList {
    repeated string username = 1;
}

message NodeList {
    repeated string nodes = 1;
}

message EncryptedMessage {
    bytes contents = 1;
    string session = 2;
    string algorithm = 3;
    bytes iv = 4;
}

message Session {
    string value = 1;
}

service MessageService {
    rpc SetUpCustomEncryption(Empty) returns (EncryptedMessage);
    //Receive Session

    rpc RSAKeyExchange (RSARequest) returns (Session);

    rpc DHKeyExchange (DHParameters) returns (SignedDHResponse);

    rpc InitAuth (EncryptedMessage) returns (EncryptedMessage);
    //Send Username, receive Challenge

    rpc Authenticate (EncryptedMessage) returns (EncryptedMessage);
    //Send AuthResponse, receive Succeeded

    rpc PostMessage (EncryptedMessage) returns (EncryptedMessage);
    //Send Message, receive Succeeded

    rpc ListMessages (EncryptedMessage) returns (EncryptedMessage);
    //Send Topic, receive MessageList

    rpc ListMessagesWithTimestamps(EncryptedMessage) returns (EncryptedMessage);
    //Send Topic, receive MessageListWithTimestamps

    rpc RetrieveMessage(EncryptedMessage) returns (EncryptedMessage);
    //Send Id, receive Message

    rpc ListTopics(Session) returns (EncryptedMessage);
    //Return TopicsList

    rpc Subscribe(EncryptedMessage) returns (EncryptedMessage);
    //Send SubscriberInfo, receive Succeeded

    rpc Unsubscribe (EncryptedMessage) returns (EncryptedMessage);
    //Send SubscriberInfo, receive Succeeded

    rpc ListSubscribers (EncryptedMessage) returns (EncryptedMessage);
    //Send Topic, receive SubscriberList

    rpc ListNodes (Session) returns (EncryptedMessage);
    //Receive NodeList
}
